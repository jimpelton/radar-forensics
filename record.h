#ifndef RECORD_H
#define RECORD_H

#include <QObject>
#include <QJsonObject>
#include <QColor>
#include <QVariantMap>

///////////////////////////////////////////////////////////////////////////////
class Record : public QObject {
    Q_OBJECT

public:
    ///////////////////////////////////////////////////////////////////////////////
    explicit Record(QObject *parent = nullptr);


    ///////////////////////////////////////////////////////////////////////////////
    explicit Record(QJsonObject const &json, QObject *parent = nullptr);


    ///////////////////////////////////////////////////////////////////////////////
    explicit Record(QJsonObject const &json, QColor const &c, QObject *parent = nullptr);


    ///////////////////////////////////////////////////////////////////////////////
    Record(Record const &o);



    ///////////////////////////////////////////////////////////////////////////////
    virtual ~Record();


    ///////////////////////////////////////////////////////////////////////////////
    Record&
    operator=(Record const &o);


    ///////////////////////////////////////////////////////////////////////////////
    QVariantMap const &
    attributes() const;


    ///////////////////////////////////////////////////////////////////////////////
    QColor const &
    color() const;


    ///////////////////////////////////////////////////////////////////////////////
    double
    timestamp() const;

    void
    setText(const QString &s);
private:
    QVariantMap attrs;
    QColor c;
    double ts;
};

#endif // RECORD_H
